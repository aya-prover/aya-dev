DirectNonTermination:
In file $FILE:2:4 ->

  1 │   open import arith::nat::base
  2 │   def g Nat : Nat
    │       ╰╯
  3 │   | 0 => 0

Error: The recursive definition `g` is not structurally recursive
note: In particular, the problematic call is:
        g (suc n)
      whose call matrix is:
        =

1 error(s), 0 warning(s).
Let's learn from that.

UnfoldNonTermination:
In file $FILE:3:4 ->

  1 │   open import arith::nat::base
  2 │   def f Nat : Nat | n => g (suc n)
  3 │   def g Nat : Nat
    │       ╰╯

Error: The recursive definition `g` is not structurally recursive
note: In particular, the problematic call is:
        g (suc n)
      whose call matrix is:
        =

1 error(s), 0 warning(s).
Let's learn from that.

SwapAddition:
That looks right!

PartialDef:
That looks right!

SelfData:
In file $FILE:1:10 ->

  1 │   inductive SelfData (A : SelfData)
    │             ╰──────╯

Error: Self-reference found in the signature of SelfData

1 error(s), 0 warning(s).
Let's learn from that.

SelfCon:
In file $FILE:1:21 ->

  1 │   inductive SelfData | SelfCon SelfCon
    │                        ╰─────╯

Error: Self-reference found in the signature of SelfCon

1 error(s), 0 warning(s).
Let's learn from that.

SelfFn:
In file $FILE:2:4 ->

  1 │   open import arith::nat::base
  2 │   def crazyAdd (a : Nat) : crazyAdd a
    │       ╰──────╯
  3 │   | x => x

Error: Self-reference found in the signature of crazyAdd

1 error(s), 0 warning(s).
Let's learn from that.

