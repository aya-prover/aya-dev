name: nightly
on:
  push:
    branches: [main, when-i-am-free]
jobs:
  move-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Move ci tag
        run: |
          mkdir repo
          git clone -b "$BRANCH_NAME" "https://github.com/${GITHUB_REPOSITORY}" repo
          cd repo
          bash .github/workflows/move-tag.sh "nightly-build" "Last commit build by the CI"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  nightly-build:
    needs: [move-tag]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            graalVM: https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/22.2.0-dev-20220421_2218/graalvm-ce-java17-linux-amd64-dev.tar.gz
            binaryExt: ''
          - os: macos-latest
            arch: x86_64
            graalVM: https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/22.2.0-dev-20220421_2218/graalvm-ce-java17-darwin-amd64-dev.tar.gz
            binaryExt: ''
          - os: windows-latest
            arch: x86_64
            graalVM: https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/22.2.0-dev-20220421_2218/graalvm-ce-java17-windows-amd64-dev.zip
            binaryExt: '.exe'
    steps:
      - uses: actions/checkout@v2
      - name: Download GraalVM
        uses: suisei-cn/actions-download-file@v1
        id: graalvm-download
        with:
          url: ${{ matrix.graalVM }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ steps.graalvm-download.outputs.filename }}
          java-version: '17'
          architecture: x64

      - name: gradle jlink
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: jlink --info --no-daemon --stacktrace --warning-mode all

      - name: gradle fatJar
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: fatjar --info --no-daemon --stacktrace --warning-mode all

      - name: gradle nativeCompile
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: nativeCompile --info --no-daemon --stacktrace --warning-mode all

      - name: Copy fat jar
        run: |
          cp ./lsp/build/libs/lsp-*-fat.jar ./lsp-fatjar.jar
          cp ./cli/build/libs/cli-*-fat.jar ./cli-fatjar.jar

      - name: Copy aya Native Image
        run: cp ./cli/build/native/nativeCompile/aya ./aya-native-${{ matrix.os }}_${{ matrix.arch }}${{ matrix.binaryExt }}

      - name: Zip Artifacts (Windows)
        uses: papeloto/action-zip@v1
        with:
          files: ./lsp/build/image
          dest: aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip
        if: matrix.os == 'windows-latest'

      - name: Zip Artifacts (Unix)
        run: |
          root="$(pwd)"
          cd ./lsp/build/image
          zip -r "$root/aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip" .
        if: matrix.os != 'windows-latest'

      - name: Update Release
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          isPrerelease: false
          tag_name: nightly-build
          release_name: "Nightly builds"
          body_mrkdwn: |
            _These are latest builds, but the date on GitHub is frozen due to stupid limitations.
            Corresponding commit: <https://github.com/aya-prover/aya-dev/commit/${{ github.sha }}>_
          assets: aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip;lsp-fatjar.jar;cli-fatjar.jar;aya-native-${{ matrix.os }}_${{ matrix.arch }}${{ matrix.binaryExt }}|application/octet-stream
          replace_assets: true
          github_token: ${{ secrets.GH_TOKEN }}
