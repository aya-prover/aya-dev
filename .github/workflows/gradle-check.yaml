name: test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]
jobs:
  check-aya-version:
    uses: aya-prover/aya-dev/.github/workflows/extract-version.yaml@main

  gradle-check:
    needs: [check-aya-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - run: |
          ./gradlew testCodeCoverageReport --no-daemon --stacktrace --warning-mode all
      - name: Test report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          check_name: junit-tests
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload coverage to Codecov
        if: github.base_ref != null
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
      - name: Generate fat jar and install aya
        run: |
          ./gradlew fatJar --no-daemon --stacktrace --warning-mode all
          cp ./cli-console/build/libs/*-fat.jar ./cli-fatjar.jar
          
          ARCH=$(echo $RUNNER_ARCH | tr '[:upper:]' '[:lower:]')
          TC_ROOT=$RUNNER_TOOL_CACHE/aya/${{ steps.extract-version.outputs.projectVersion }}/$ARCH
          mkdir -p $TC_ROOT && cp ./cli-fatjar.jar $TC_ROOT/cli-fatjar.jar && touch "$TC_ROOT.complete"
      - name: Run issue tracker
        if: github.event.pull_request != null
        uses: 'HoshinoTented/issue-tracker@v1'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue: ${{ github.event.pull_request.number }}
          pull_request: true
