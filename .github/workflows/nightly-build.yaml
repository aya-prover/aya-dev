name: nightly
on:
  push:
    branches: [main, ci]
jobs:
  move-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Move ci tag
        run: |
          mkdir repo
          git clone -b "$BRANCH_NAME" "https://github.com/${GITHUB_REPOSITORY}" repo
          cd repo
          bash .github/workflows/move-tag.sh "nightly-build" "Last commit build by the CI"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  check-aya-version:
    uses: aya-prover/aya-dev/.github/workflows/extract-version.yaml@main

  publish-snapshot:
    needs: [check-aya-version]
    runs-on: ubuntu-latest
    if: github.repository == 'aya-prover/aya-dev' && needs.check-aya-version.outputs.isSnapshot == 'true'
    env:
      ossrhUsername: ${{ secrets.OSSRHUSERNAME }}
      ossrhPassword: ${{ secrets.OSSRHPASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}
      - name: gradle publish
        uses: gradle/gradle-build-action@v3
        with:
          arguments: publishAggregationToCentralPortalSnapshots --info --no-daemon --stacktrace --warning-mode all

  nightly-build:
    needs: [move-tag, check-aya-version]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: 'linux-x64'
            binaryExt: ''
          - os: macos-latest
            platform: 'macos-x64'
            binaryExt: ''
          - os: windows-latest
            platform: 'windows-x64'
            binaryExt: '.exe'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}

      - name: Run task jlinkAyaZip
        uses: gradle/gradle-build-action@v3
        with:
          arguments: jlinkAyaZip --info --no-daemon --stacktrace --warning-mode all
        if: matrix.os == 'ubuntu-latest'

      - name: Run task fatJar
        uses: gradle/gradle-build-action@v3
        with:
          arguments: fatJar --no-daemon --stacktrace --warning-mode all
        if: matrix.os == 'ubuntu-latest'

      - name: Collect jlink zip files
        if: matrix.os == 'ubuntu-latest'
        id: collect_jlinkAyaZip
        run: |
          jlinkFiles="$(find ide-lsp/build/image -maxdepth 1 -type f -exec echo -n '{};' \;)"
          echo "Found jlinkAyaZip outputs: $jlinkFiles"
          echo "::set-output name=jlinkFiles::$jlinkFiles"

      - name: Copy fat jar
        if: matrix.os == 'ubuntu-latest'
        run: |
          cp ./ide-lsp/build/libs/*-fat.jar ./lsp-fatjar.jar
          cp ./cli-console/build/libs/*-fat.jar ./cli-fatjar.jar

      - name: Get current date
        id: date
        run: echo "MY_DATE=$(date +%Y/%m/%d-%H:%M)" >> $GITHUB_ENV

      - name: Update Release (jlink zips and jars)
        uses: Xotl/cool-github-releases@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          mode: update
          isPrerelease: false
          tag_name: nightly-build
          release_name: "${{ env.MY_DATE }} nightly build"
          body_mrkdwn: |
            _These are latest builds, but the date on GitHub is frozen due to stupid limitations.
            Corresponding commit: <https://github.com/aya-prover/aya-dev/commit/${{ github.sha }}>_
          assets: lsp-fatjar.jar;cli-fatjar.jar;${{ steps.collect_jlinkAyaZip.outputs.jlinkFiles }}
          replace_assets: true
          github_token: ${{ secrets.GH_TOKEN }}
