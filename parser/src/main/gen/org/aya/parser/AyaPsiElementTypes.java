// Copyright (c) 2020-2025 Tesla (Yinsen) Zhang.
// Use of this source code is governed by the MIT license that can be found in the LICENSE.md file.

// This is a generated file. Not intended for manual editing.
package org.aya.parser;

import com.intellij.psi.tree.IElementType;

public interface AyaPsiElementTypes {

  IElementType APP_EXPR = new AyaPsiElementType("APP_EXPR");
  IElementType ARGUMENT = new AyaPsiElementType("ARGUMENT");
  IElementType ARRAY_ATOM = new AyaPsiElementType("ARRAY_ATOM");
  IElementType ARRAY_BLOCK = new AyaPsiElementType("ARRAY_BLOCK");
  IElementType ARRAY_COMP_BLOCK = new AyaPsiElementType("ARRAY_COMP_BLOCK");
  IElementType ARRAY_ELEMENTS_BLOCK = new AyaPsiElementType("ARRAY_ELEMENTS_BLOCK");
  IElementType ARROW_EXPR = new AyaPsiElementType("ARROW_EXPR");
  IElementType ASSOC = new AyaPsiElementType("ASSOC");
  IElementType ATOM_BIND_PATTERN = new AyaPsiElementType("ATOM_BIND_PATTERN");
  IElementType ATOM_EXPR = new AyaPsiElementType("ATOM_EXPR");
  IElementType ATOM_EX_ARGUMENT = new AyaPsiElementType("ATOM_EX_ARGUMENT");
  IElementType ATOM_LIST_PATTERN = new AyaPsiElementType("ATOM_LIST_PATTERN");
  IElementType ATOM_PATTERN = new AyaPsiElementType("ATOM_PATTERN");
  IElementType BARE_CLAUSE = new AyaPsiElementType("BARE_CLAUSE");
  IElementType BARRED = new AyaPsiElementType("BARRED");
  IElementType BARRED_CLAUSE = new AyaPsiElementType("BARRED_CLAUSE");
  IElementType BIND_BLOCK = new AyaPsiElementType("BIND_BLOCK");
  IElementType CALM_FACE_EXPR = new AyaPsiElementType("CALM_FACE_EXPR");
  IElementType CLASS_DECL = new AyaPsiElementType("CLASS_DECL");
  IElementType CLASS_MEMBER = new AyaPsiElementType("CLASS_MEMBER");
  IElementType CLAUSE = new AyaPsiElementType("CLAUSE");
  IElementType CLAUSES = new AyaPsiElementType("CLAUSES");
  IElementType COMMA_SEP = new AyaPsiElementType("COMMA_SEP");
  IElementType DATA_BODY = new AyaPsiElementType("DATA_BODY");
  IElementType DATA_CON = new AyaPsiElementType("DATA_CON");
  IElementType DATA_CON_CLAUSE = new AyaPsiElementType("DATA_CON_CLAUSE");
  IElementType DATA_DECL = new AyaPsiElementType("DATA_DECL");
  IElementType DECL = new AyaPsiElementType("DECL");
  IElementType DECL_MODIFIER = new AyaPsiElementType("DECL_MODIFIER");
  IElementType DECL_NAME_OR_INFIX = new AyaPsiElementType("DECL_NAME_OR_INFIX");
  IElementType DO_BINDING = new AyaPsiElementType("DO_BINDING");
  IElementType DO_BLOCK_CONTENT = new AyaPsiElementType("DO_BLOCK_CONTENT");
  IElementType DO_EXPR = new AyaPsiElementType("DO_EXPR");
  IElementType ELIMS = new AyaPsiElementType("ELIMS");
  IElementType ELIM_DATA_BODY = new AyaPsiElementType("ELIM_DATA_BODY");
  IElementType EXPR = new AyaPsiElementType("EXPR");
  IElementType FN_BODY = new AyaPsiElementType("FN_BODY");
  IElementType FN_DECL = new AyaPsiElementType("FN_DECL");
  IElementType FORALL_EXPR = new AyaPsiElementType("FORALL_EXPR");
  IElementType GENERALIZE = new AyaPsiElementType("GENERALIZE");
  IElementType GENERALIZE_PARAM_NAME = new AyaPsiElementType("GENERALIZE_PARAM_NAME");
  IElementType GOAL_EXPR = new AyaPsiElementType("GOAL_EXPR");
  IElementType HIDE_LIST = new AyaPsiElementType("HIDE_LIST");
  IElementType HOLE_EXPR = new AyaPsiElementType("HOLE_EXPR");
  IElementType IDIOM_ATOM = new AyaPsiElementType("IDIOM_ATOM");
  IElementType IDIOM_BLOCK = new AyaPsiElementType("IDIOM_BLOCK");
  IElementType IMPORT_CMD = new AyaPsiElementType("IMPORT_CMD");
  IElementType LAMBDA_0_EXPR = new AyaPsiElementType("LAMBDA_0_EXPR");
  IElementType LAMBDA_1_EXPR = new AyaPsiElementType("LAMBDA_1_EXPR");
  IElementType LAMBDA_2_EXPR = new AyaPsiElementType("LAMBDA_2_EXPR");
  IElementType LAMBDA_HOLE_EXPR = new AyaPsiElementType("LAMBDA_HOLE_EXPR");
  IElementType LAMBDA_TELE = new AyaPsiElementType("LAMBDA_TELE");
  IElementType LAMBDA_TELE_BINDER = new AyaPsiElementType("LAMBDA_TELE_BINDER");
  IElementType LET_BIND = new AyaPsiElementType("LET_BIND");
  IElementType LET_BIND_BLOCK = new AyaPsiElementType("LET_BIND_BLOCK");
  IElementType LET_EXPR = new AyaPsiElementType("LET_EXPR");
  IElementType LICIT = new AyaPsiElementType("LICIT");
  IElementType LITERAL = new AyaPsiElementType("LITERAL");
  IElementType LIT_INT_EXPR = new AyaPsiElementType("LIT_INT_EXPR");
  IElementType LIT_STRING_EXPR = new AyaPsiElementType("LIT_STRING_EXPR");
  IElementType LOOSERS = new AyaPsiElementType("LOOSERS");
  IElementType MATCH_DISCR = new AyaPsiElementType("MATCH_DISCR");
  IElementType MATCH_EXPR = new AyaPsiElementType("MATCH_EXPR");
  IElementType MATCH_TYPE = new AyaPsiElementType("MATCH_TYPE");
  IElementType MEMBER_MODIFIER = new AyaPsiElementType("MEMBER_MODIFIER");
  IElementType MODULE = new AyaPsiElementType("MODULE");
  IElementType NAMED_IM_ARGUMENT = new AyaPsiElementType("NAMED_IM_ARGUMENT");
  IElementType NEW_EXPR = new AyaPsiElementType("NEW_EXPR");
  IElementType OPEN_CMD = new AyaPsiElementType("OPEN_CMD");
  IElementType PARTIAL_EXPR = new AyaPsiElementType("PARTIAL_EXPR");
  IElementType PATTERN = new AyaPsiElementType("PATTERN");
  IElementType PATTERNS = new AyaPsiElementType("PATTERNS");
  IElementType PI_EXPR = new AyaPsiElementType("PI_EXPR");
  IElementType PRAGMA = new AyaPsiElementType("PRAGMA");
  IElementType PRIM_DECL = new AyaPsiElementType("PRIM_DECL");
  IElementType PRIM_NAME = new AyaPsiElementType("PRIM_NAME");
  IElementType PROJ_EXPR = new AyaPsiElementType("PROJ_EXPR");
  IElementType PROJ_FIX = new AyaPsiElementType("PROJ_FIX");
  IElementType PROJ_FIX_ID = new AyaPsiElementType("PROJ_FIX_ID");
  IElementType QUALIFIED_ID = new AyaPsiElementType("QUALIFIED_ID");
  IElementType REF_EXPR = new AyaPsiElementType("REF_EXPR");
  IElementType SELF_EXPR = new AyaPsiElementType("SELF_EXPR");
  IElementType SIGMA_EXPR = new AyaPsiElementType("SIGMA_EXPR");
  IElementType STMT = new AyaPsiElementType("STMT");
  IElementType TELE = new AyaPsiElementType("TELE");
  IElementType TELE_BINDER = new AyaPsiElementType("TELE_BINDER");
  IElementType TELE_BINDER_ANONYMOUS = new AyaPsiElementType("TELE_BINDER_ANONYMOUS");
  IElementType TELE_BINDER_TYPED = new AyaPsiElementType("TELE_BINDER_TYPED");
  IElementType TELE_BINDER_UNTYPED = new AyaPsiElementType("TELE_BINDER_UNTYPED");
  IElementType TELE_PARAM_NAME = new AyaPsiElementType("TELE_PARAM_NAME");
  IElementType TIGHTERS = new AyaPsiElementType("TIGHTERS");
  IElementType TUPLE_ATOM = new AyaPsiElementType("TUPLE_ATOM");
  IElementType TUPLE_IM_ARGUMENT = new AyaPsiElementType("TUPLE_IM_ARGUMENT");
  IElementType TYPE = new AyaPsiElementType("TYPE");
  IElementType ULIFT_ATOM = new AyaPsiElementType("ULIFT_ATOM");
  IElementType ULIFT_PREFIX = new AyaPsiElementType("ULIFT_PREFIX");
  IElementType UNIT_PATTERN = new AyaPsiElementType("UNIT_PATTERN");
  IElementType UNIT_PATTERNS = new AyaPsiElementType("UNIT_PATTERNS");
  IElementType UNIV_EXPR = new AyaPsiElementType("UNIV_EXPR");
  IElementType USE_AS = new AyaPsiElementType("USE_AS");
  IElementType USE_HIDE = new AyaPsiElementType("USE_HIDE");
  IElementType USE_ID = new AyaPsiElementType("USE_ID");
  IElementType USE_LIST = new AyaPsiElementType("USE_LIST");
  IElementType WEAK_ID = new AyaPsiElementType("WEAK_ID");

  IElementType AT = new AyaPsiTokenType("@");
  IElementType BAR = new AyaPsiTokenType("|");
  IElementType CALM_FACE = new AyaPsiTokenType("_");
  IElementType COLON = new AyaPsiTokenType(":");
  IElementType COLON2 = new AyaPsiTokenType("::");
  IElementType COMMA = new AyaPsiTokenType(",");
  IElementType DEFINE_AS = new AyaPsiTokenType(":=");
  IElementType DOC_COMMENT = new AyaPsiTokenType("DOC_COMMENT");
  IElementType DOT = new AyaPsiTokenType(".");
  IElementType ID = new AyaPsiTokenType("ID");
  IElementType IMPLIES = new AyaPsiTokenType("=>");
  IElementType KW_AS = new AyaPsiTokenType("as");
  IElementType KW_CLASS = new AyaPsiTokenType("class");
  IElementType KW_CLASSIFIYING = new AyaPsiTokenType("classifying");
  IElementType KW_CODATA = new AyaPsiTokenType("coinductive");
  IElementType KW_COERCE = new AyaPsiTokenType("coerce");
  IElementType KW_COMPLETED = new AyaPsiTokenType("completed");
  IElementType KW_DATA = new AyaPsiTokenType("inductive");
  IElementType KW_DEF = new AyaPsiTokenType("def");
  IElementType KW_DO = new AyaPsiTokenType("do");
  IElementType KW_ELIM = new AyaPsiTokenType("elim");
  IElementType KW_EXAMPLE = new AyaPsiTokenType("example");
  IElementType KW_EXTENDS = new AyaPsiTokenType("extends");
  IElementType KW_FIXL = new AyaPsiTokenType("fixl");
  IElementType KW_FIXR = new AyaPsiTokenType("fixr");
  IElementType KW_FORALL = new AyaPsiTokenType("forall");
  IElementType KW_HIDING = new AyaPsiTokenType("hiding");
  IElementType KW_IMPORT = new AyaPsiTokenType("import");
  IElementType KW_IN = new AyaPsiTokenType("in");
  IElementType KW_INFIX = new AyaPsiTokenType("infix");
  IElementType KW_INFIXL = new AyaPsiTokenType("infixl");
  IElementType KW_INFIXR = new AyaPsiTokenType("infixr");
  IElementType KW_INLINE = new AyaPsiTokenType("inline");
  IElementType KW_INSTANCE = new AyaPsiTokenType("instance");
  IElementType KW_ISET = new AyaPsiTokenType("ISet");
  IElementType KW_LAMBDA = new AyaPsiTokenType("fn");
  IElementType KW_LET = new AyaPsiTokenType("let");
  IElementType KW_LOOSER = new AyaPsiTokenType("looser");
  IElementType KW_MATCH = new AyaPsiTokenType("match");
  IElementType KW_MODULE = new AyaPsiTokenType("module");
  IElementType KW_NEW = new AyaPsiTokenType("new");
  IElementType KW_NONINSTANCE = new AyaPsiTokenType("noninstance");
  IElementType KW_NONTERMINATING = new AyaPsiTokenType("nonterminating");
  IElementType KW_OPAQUE = new AyaPsiTokenType("opaque");
  IElementType KW_OPEN = new AyaPsiTokenType("open");
  IElementType KW_OVERLAP = new AyaPsiTokenType("overlap");
  IElementType KW_OVERRIDE = new AyaPsiTokenType("override");
  IElementType KW_PARTIAL = new AyaPsiTokenType("partial");
  IElementType KW_PI = new AyaPsiTokenType("Fn");
  IElementType KW_PRIM = new AyaPsiTokenType("prim");
  IElementType KW_PRIVATE = new AyaPsiTokenType("private");
  IElementType KW_PROP = new AyaPsiTokenType("Prop");
  IElementType KW_PUBLIC = new AyaPsiTokenType("public");
  IElementType KW_RETURNS = new AyaPsiTokenType("returns");
  IElementType KW_SELF = new AyaPsiTokenType("self");
  IElementType KW_SET = new AyaPsiTokenType("Set");
  IElementType KW_SIGMA = new AyaPsiTokenType("Sig");
  IElementType KW_TAILREC = new AyaPsiTokenType("tailrec");
  IElementType KW_TIGHTER = new AyaPsiTokenType("tighter");
  IElementType KW_TYPE = new AyaPsiTokenType("Type");
  IElementType KW_ULIFT = new AyaPsiTokenType("ulift");
  IElementType KW_USING = new AyaPsiTokenType("using");
  IElementType KW_VARIABLE = new AyaPsiTokenType("variable");
  IElementType LAMBDA_HOLE = new AyaPsiTokenType("__");
  IElementType LARRAY = new AyaPsiTokenType("[");
  IElementType LARROW = new AyaPsiTokenType("<-");
  IElementType LBRACE = new AyaPsiTokenType("{");
  IElementType LGOAL = new AyaPsiTokenType("{?");
  IElementType LIDIOM = new AyaPsiTokenType("(|");
  IElementType LPAREN = new AyaPsiTokenType("(");
  IElementType NUMBER = new AyaPsiTokenType("NUMBER");
  IElementType RARRAY = new AyaPsiTokenType("]");
  IElementType RBRACE = new AyaPsiTokenType("}");
  IElementType REPL_COMMAND = new AyaPsiTokenType("REPL_COMMAND");
  IElementType RGOAL = new AyaPsiTokenType("?}");
  IElementType RIDIOM = new AyaPsiTokenType("|)");
  IElementType RPAREN = new AyaPsiTokenType(")");
  IElementType STRING = new AyaPsiTokenType("STRING");
  IElementType SUCHTHAT = new AyaPsiTokenType("**");
  IElementType TO = new AyaPsiTokenType("->");
}
